name: MMC CI/CD

on:
  push:
    branches:
      - main  # main 브랜치에 푸시 시 실행

jobs:
  build:
    runs-on: ubuntu-latest  # GitHub의 Ubuntu 가상 머신에서 실행
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # 저장소 코드를 가져옴
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Run tests
        run: ./gradlew test
        continue-on-error: true  # 테스트 코드 추가 후 삭제

      - name: Build Docker image
        run: |
          podman build -t mmc:latest .

      - name: Deploy to VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: opc
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 2222  # VM의 SSH 포트
          debug: true
          script: |
            export DB_USER=${{ secrets.DB_USER }}
            export DB_PASS=${{ secrets.DB_PASS }}
            export SSL_PASS=${{ secrets.SSL_PASS }}
            export GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            export GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            export OAUTH2_REDIRECT_URI=${{ secrets.OAUTH2_REDIRECT_URI }}
            cd /home/opc/mmc
            ./deploy.sh
          script_stop: true
          source_file: mmc-latest.tar.gz
